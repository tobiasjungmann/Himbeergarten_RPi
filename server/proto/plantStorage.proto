syntax = "proto3";

package smart_home;
option go_package = "github.com/tobiasjungmann/Himbeergarten_RPi/server/proto";
option java_package = "com.example.rpicommunicator_v1";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service PlantStorage {
  rpc getOverviewAllPlants(GetAllPlantsRequest) returns (AllPlantsReply) {
    option (google.api.http) = {
      get: "/plants"
    };
  }
  rpc getAdditionalDataPlant(GetAdditionalDataPlantRequest) returns (GetAdditionalDataPlantReply) {    option (google.api.http) = {
    get: "/plant"
  };
  }

  // Also used to update a plant with the same id if it already exists
  rpc addNewPlant(AddPlantRequest) returns (PlantOverviewMsg) {
    option (google.api.http) = {
    put: "/plant/new"
  };}
  rpc deletePlant(PlantRequest) returns (DeletePlantReply) {
    option (google.api.http) = {
    put: "/plant/delete"
  };}

  rpc getConnectedSensorOverview(GetSensorOverviewRequest) returns (GetSensorOverviewReply) {
    option (google.api.http) = {
    get: "/sensors"
  };}

  rpc GetDataForSensor(GetDataForSensorRequest) returns (GetDataForSensorReply) {
    option (google.api.http) = {
      get: "/sensors/data"
    };
  }

  rpc GetSensorsForDevice(GetSensorsForDeviceRequest) returns (GetSensorsForDeviceReply){
    option (google.api.http) = {
      get: "/device/sensors"
    };
  }

  rpc SetActiveSensorsForDevice(SetActiveSensorsForDeviceRequest) returns (SetActiveSensorsForDeviceReply){
    option (google.api.http) = {
      get: "/device/activated"
    };
  }
}

message GetSensorOverviewRequest{
}

message GetSensorOverviewReply{
  repeated SensorMsg sensors = 1;
}

message GetSensorsForDeviceRequest{
  string deviceMAC=1;
}
message GetSensorsForDeviceReply{
  repeated uint32 sensors=1;
}

message SetActiveSensorsForDeviceRequest{
  string deviceMAC=1;
  repeated uint32 activated=2;
}
message SetActiveSensorsForDeviceReply{
}

message SensorMsg{
  string deviceMAC = 1;
  int32 sensorId = 2;
  int32 sensorSlot =3;
  bool inUse = 4;
  int32 connectedPlant=5;
}

message GetAllPlantsRequest{
}

message PlantThumbnailReply{
  repeated PlantThumbnailMsg images = 1;
}
message PlantThumbnailMsg{
  int32 plantId = 1;
  bytes image = 2;
}

message  PlantRequest{
  int32 plant = 1;
}

message DeletePlantReply{
}

message AllPlantsReply{
  repeated PlantOverviewMsg plants = 1;
}

message AddPlantRequest {
  int32 plantId = 1;
  string Name = 2;
  string Info = 3;
  int32 sensorId = 4;
  repeated ImageMsg images = 5;
}

message ImageMsg {
  int32 imageId=1;
  bytes imageBytes=2;
}

message PlantOverviewMsg{
  int32 plantId = 1;
  string Name = 2;
  string Info = 3;
  GpioIdentifierMsg gpio = 4;
  bytes thumbnail = 5;
}

message GetAdditionalDataPlantRequest{
  int32 plantId = 1;
}

message HumidityMsg{
  int32 humidity = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message GpioIdentifierMsg{
  int32 sensorId = 1;
  string deviceSerialInterfaceName = 2;
  string gpioName = 3;
}

message GetAdditionalDataPlantReply{
  int32 plant = 1;
  GpioIdentifierMsg gpio = 2;
  repeated HumidityMsg humidity = 4;
  repeated ImageMsg images = 5;
}

message GetDataForSensorRequest{
  int32 sensorId = 1;
  optional int64 limit = 2;
}

message GetDataForSensorReply{
  repeated HumidityMsg data = 1;
}

enum GpioUser{
  GPIO_USER_UNDEFINED = 0;
  GPIO_USER_PLANT = 1;
  GPIO_USER_RELAIS = 2;
}
enum DeviceTypes{
  DEVICE_UNDEFINED = 0;
  DEVICE_RPI = 1;
  DEVICE_ARDUINO_NANO = 2;
}